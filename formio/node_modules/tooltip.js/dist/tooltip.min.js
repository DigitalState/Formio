/*
 Copyright (C) Federico Zivolo 2017
 Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).
 */import Popper from'popper.js';function isFunction(a){return a&&'[object Function]'==={}.toString.call(a)}var _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a};const DEFAULT_OPTIONS={container:!1,delay:0,html:!1,placement:'top',title:'',template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:'hover focus',offset:0};class Tooltip{constructor(a,b){_initialiseProps.call(this),b=_extends({},DEFAULT_OPTIONS,b),a.jquery&&(a=a[0]),this.reference=a,this.options=b;const c='string'==typeof b.trigger?b.trigger.split(' ').filter((a)=>-1!==['click','hover','focus'].indexOf(a)):[];this._isOpen=!1,this._popperOptions={},this._setEventListeners(a,c,b)}_create(a,b,c,d){const e=window.document.createElement('div');e.innerHTML=b.trim();const f=e.childNodes[0];f.id=`tooltip_${Math.random().toString(36).substr(2,10)}`,f.setAttribute('aria-hidden','false');const g=e.querySelector(this.innerSelector);if(1===c.nodeType||11===c.nodeType)d&&g.appendChild(c);else if(isFunction(c)){const b=c.call(a);d?g.innerHTML=b:g.innerText=b}else d?g.innerHTML=c:g.innerText=c;return f}_show(a,b){if(this._isOpen&&!this._isOpening)return this;if(this._isOpen=!0,this._tooltipNode)return this._tooltipNode.style.display='',this._tooltipNode.setAttribute('aria-hidden','false'),this.popperInstance.update(),this;const c=a.getAttribute('title')||b.title;if(!c)return this;const d=this._create(a,b.template,c,b.html);a.setAttribute('aria-describedby',d.id);const e=this._findContainer(b.container,a);return this._append(d,e),this._popperOptions=_extends({},b.popperOptions,{placement:b.placement}),this._popperOptions.modifiers=_extends({},this._popperOptions.modifiers,{arrow:{element:this.arrowSelector},offset:{offset:b.offset}}),b.boundariesElement&&(this._popperOptions.modifiers.preventOverflow={boundariesElement:b.boundariesElement}),this.popperInstance=new Popper(a,d,this._popperOptions),this._tooltipNode=d,this}_hide(){return this._isOpen?(this._isOpen=!1,this._tooltipNode.style.display='none',this._tooltipNode.setAttribute('aria-hidden','true'),this):this}_dispose(){return this._events.forEach(({func:a,event:b})=>{this.reference.removeEventListener(b,a)}),this._events=[],this._tooltipNode&&(this._hide(),this.popperInstance.destroy(),!this.popperInstance.options.removeOnDestroy&&(this._tooltipNode.parentNode.removeChild(this._tooltipNode),this._tooltipNode=null)),this}_findContainer(a,b){return'string'==typeof a?a=window.document.querySelector(a):!1===a&&(a=b.parentNode),a}_append(a,b){b.appendChild(a)}_setEventListeners(a,b,c){const d=[],e=[];b.forEach((a)=>{'hover'===a?(d.push('mouseenter'),e.push('mouseleave')):'focus'===a?(d.push('focus'),e.push('blur')):'click'===a?(d.push('click'),e.push('click')):void 0}),d.forEach((b)=>{const d=(b)=>{!0===this._isOpening||(b.usedByTooltip=!0,this._scheduleShow(a,c.delay,c,b))};this._events.push({event:b,func:d}),a.addEventListener(b,d)}),e.forEach((b)=>{const d=(b)=>{!0===b.usedByTooltip||this._scheduleHide(a,c.delay,c,b)};this._events.push({event:b,func:d}),a.addEventListener(b,d)})}_scheduleShow(a,b,c){this._isOpening=!0;const d=b&&b.show||b||0;this._showTimeout=window.setTimeout(()=>this._show(a,c),d)}_scheduleHide(a,b,c,d){this._isOpening=!1;const e=b&&b.hide||b||0;window.setTimeout(()=>{if((window.clearTimeout(this._showTimeout),!1!==this._isOpen)&&document.body.contains(this._tooltipNode)){if('mouseleave'===d.type){const e=this._setTooltipNodeEvent(d,a,b,c);if(e)return}this._hide(a,c)}},e)}}var _initialiseProps=function(){this.show=()=>this._show(this.reference,this.options),this.hide=()=>this._hide(),this.dispose=()=>this._dispose(),this.toggle=()=>this._isOpen?this.hide():this.show(),this.arrowSelector='.tooltip-arrow, .tooltip__arrow',this.innerSelector='.tooltip-inner, .tooltip__inner',this._events=[],this._setTooltipNodeEvent=(a,b,c,d)=>{const e=a.relatedreference||a.toElement||a.relatedTarget,f=(c)=>{const e=c.relatedreference||c.toElement||c.relatedTarget;this._tooltipNode.removeEventListener(a.type,f),b.contains(e)||this._scheduleHide(b,d.delay,d,c)};return!!this._tooltipNode.contains(e)&&(this._tooltipNode.addEventListener(a.type,f),!0)}};export default Tooltip;
//# sourceMappingURL=tooltip.min.js.map
